[
  {
    "service": "Feeds Data Service",
    "endpoint": "FeedConfig",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "adPolicyId",
      "adapterParameters",
      "adminTags",
      "availableFields",
      "baseQuery",
      "cacheLifetime",
      "cacheRefreshStrategy",
      "categoryAdapterParameters",
      "categoryFields",
      "categoryForm",
      "contentQuery",
      "defaultThumbnailAssetType",
      "disabled",
      "endIndex",
      "feedType",
      "fileFields",
      "form",
      "itemLinkUrl",
      "limitByAvailableDate",
      "limitCategoryFeed",
      "limitToApproved",
      "link",
      "linkUrl",
      "mediaFields",
      "mediaIds",
      "ownerId",
      "pid",
      "pinnedIds",
      "playerUrl",
      "preferSortKeysOnSearch",
      "queryEngine",
      "releaseFields",
      "releaseUrlParameters",
      "restrictionId",
      "schema",
      "segmentQueries",
      "sortKeys",
      "subFeeds",
      "thumbnailFilter",
      "urlType"
    ]
  },
  {
    "service": "FeedReader Data Service",
    "endpoint": "FeedRecord",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "afterScript",
      "beforeScript",
      "checksum",
      "createBatch",
      "disabled",
      "error",
      "errorEmailAddresses",
      "etag",
      "feedPageSize",
      "feedPassword",
      "feedTimeZoneId",
      "feedUrl",
      "feedUserName",
      "feedZones",
      "fileIngestMethod",
      "fileBaseUrl",
      "frequency",
      "ingestAccountId",
      "ingestPassword",
      "ingestPid",
      "ingestUserName",
      "lastError",
      "lastModified",
      "lastReadTime",
      "lastSessionStartTime",
      "nextReadTime",
      "ownerId",
      "parameters",
      "serviceLock",
      "serviceLockExpiration",
      "transferInfo"
    ]
  },
  {
    "service": "Ingest Data Service",
    "endpoint": "AdapterConfiguration",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "adapterId",
      "allowedAccount",
      "allowedAccounts",
      "disabled",
      "fileExtension",
      "fileExtensions",
      "mimeType",
      "mimeTypes",
      "ownerId",
      "parameters",
      "pid",
      "script"
    ]
  },
  {
    "service": "Media Data Service",
    "endpoint": "AssetType",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "ownerId"
    ]
  },
  {
    "service": "Media Data Service",
    "endpoint": "Category",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "descriptionLocalized",
      "fullTitle",
      "fullTitleLocalized",
      "label",
      "labelLocalized",
      "level",
      "order",
      "ownerId",
      "parentId",
      "scheme",
      "titleLocalized"
    ]
  },
  {
    "service": "Media Data Service",
    "endpoint": "MediaField",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "descriptionLocalized",
      "fullTitle",
      "fullTitleLocalized",
      "label",
      "labelLocalized",
      "level",
      "order",
      "parentId",
      "scheme",
      "titleLocalized",
      "allowedValues",
      "dataStructure",
      "dataType",
      "defaultValue",
      "fieldName",
      "includeInTextSearch",
      "isUnique",
      "length",
      "namespace",
      "namespacePrefix",
      "notifyAlways",
      "notifyChanges",
      "notifyDelete",
      "ownerId",
      "searchFieldName"
    ]
  },
  {
    "service": "Media Data Service",
    "endpoint": "MediaFileField",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "descriptionLocalized",
      "fullTitle",
      "fullTitleLocalized",
      "label",
      "labelLocalized",
      "level",
      "order",
      "parentId",
      "scheme",
      "titleLocalized",
      "allowedValues",
      "dataStructure",
      "dataType",
      "defaultValue",
      "fieldName",
      "includeInTextSearch",
      "isUnique",
      "length",
      "namespace",
      "namespacePrefix",
      "notifyAlways",
      "notifyChanges",
      "notifyDelete",
      "ownerId",
      "searchFieldName"
    ]
  },
  {
    "service": "Media Data Service",
    "endpoint": "ProviderField",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "adPolicyId",
      "adminTags",
      "contactInfo",
      "descriptionLocalized",
      "emailNotificationRecipients",
      "notes",
      "notesLocalized",
      "overrideDefaultMediaRetentionPeriod",
      "ownerId",
      "providerAccountIds",
      "providerMediaRetentionPeriod",
      "restrictionId",
      "titleLocalized",
      ":"
    ]
  },
  {
    "service": "Media Data Service",
    "endpoint": "Server",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "allowedAccountIds",
      "disabled",
      "failoverStreamingUrl",
      "formats",
      "downloadUrl",
      "iconUrl",
      "maximumFolderCount",
      "organizeByOwner",
      "organizeForVolume",
      "ownerId",
      "password",
      "privateKey",
      "promptsToDownload",
      "pullUrl",
      "storageUrl",
      "streamingUrl",
      "userName",
      "zones",
      ":"
    ]
  },
  {
    "service": "Media Data Service",
    "endpoint": "ServerField",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "allowedValues",
      "dataStructure",
      "dataType",
      "defaultValue",
      "fieldName",
      "includeInTextSearch",
      "isUnique",
      "length",
      "namespace",
      "namespacePrefix",
      "notifyAlways",
      "notifyChanges",
      "notifyDelete",
      "ownerId",
      "searchFieldName"
    ]
  },
  {
    "service": "Publish Data Service",
    "endpoint": "AdapterConfiguration",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "adapterId",
      "disabled",
      "ownerId",
      "parameters",
      "publishScript",
      "revokeScript",
      "updateMetadataScript"
    ]
  },
  {
    "service": "Publish Data Service",
    "endpoint": "PublishProfile",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "autoPublishScript",
      "disableAutoRevokes",
      "disableAutoUpdates",
      "disabled",
      "fileTargetCount",
      "fileTargets",
      "isCustom",
      "outletProfileIds",
      "ownerId",
      "prioritySettings",
      "publishProfileIds",
      "supportingProfile",
      "supportsUpdate"
    ]
  },
  {
    "service": "Task Service",
    "endpoint": "TaskTemplate",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "adminTags",
      "ownerId",
      "taskArguments",
      "taskType",
      "taskTypeRevision"
    ]
  },
  {
    "service": "Validation Data Service",
    "endpoint": "ConditionalRule",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "disabled",
      "objectType",
      "originalId",
      "originalOwnerId",
      "ownerId",
      "parameterValues",
      "validatorId"
    ]
  },
  {
    "service": "Validation Data Service",
    "endpoint": "ValidationRule",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "action",
      "context",
      "conditionalRuleId",
      "disabled",
      "fatal",
      "objectType",
      "order",
      "originalId",
      "originalOwnerId",
      "ownerId",
      "parameterValues",
      "process",
      "validatorId"
    ]
  },
  {
    "service": "WatchFolder Data Service",
    "endpoint": "WatchFolder",
    "fields": [
      "id",
      "guid",
      "title",
      "description",
      "createBatch",
      "deleteMetafiles",
      "disabled",
      "emptySubfolderLifetime",
      "error",
      "errorEmailAddresses",
      "errorSubfolder",
      "fileIngestMethod",
      "filesAppearMidTransfer",
      "folderPassword",
      "folderTimeZoneId",
      "folderPrivateKey",
      "folderUrl",
      "folderUserName",
      "folderZones",
      "frequency",
      "ingestAccountId",
      "ingestPassword",
      "ingestPid",
      "ingestUserName",
      "lastError",
      "lastWatchTime",
      "logSubfolder",
      "ownerId",
      "nextWatchTime",
      "readyExtension",
      "requireMetadata",
      "serviceLock",
      "requireReadyFile",
      "serviceLockExpiration",
      "watchSubfolders"
    ]
  }
]